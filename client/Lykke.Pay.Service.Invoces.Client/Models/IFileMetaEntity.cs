// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Pay.Service.Invoces.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class IFileMetaEntity
    {
        /// <summary>
        /// Initializes a new instance of the IFileMetaEntity class.
        /// </summary>
        public IFileMetaEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IFileMetaEntity class.
        /// </summary>
        public IFileMetaEntity(int fileSize, string invoiceId = default(string), string fileId = default(string), string fileName = default(string), string fileMetaType = default(string))
        {
            InvoiceId = invoiceId;
            FileId = fileId;
            FileName = fileName;
            FileMetaType = fileMetaType;
            FileSize = fileSize;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InvoiceId")]
        public string InvoiceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FileId")]
        public string FileId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FileName")]
        public string FileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FileMetaType")]
        public string FileMetaType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FileSize")]
        public int FileSize { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
